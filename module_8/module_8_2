def personal_sum(numbers):
    '''Подсчитывать сумму чисел в numbers путём перебора и увеличивать переменную result.'''
    result = 0
    ''' то обработать исключение TypeError, увеличив счётчик incorrect_data на 1'''
    incorrect_data = 0
    for i in numbers:
        try:
            result += i
        except TypeError:
            ''' Если же при переборе встречается данное типа отличного
             от числового, то обработать исключение TypeError'''
            incorrect_data += 1
            print(f'Некорректный тип данных для подсчёта суммы: {i}')
    return (result, incorrect_data)


def calculate_average(numbers):
    ''' Среднее арифметическое - сумма всех данных делённая на их количество.'''
    try:
        return personal_sum(numbers)[0] / (len(numbers) - personal_sum(numbers)[1])
        #Количество данных Минус количество некорректных
    except ZeroDivisionError:
        return 0
    except TypeError:
        print('В numbers записан некорректный тип данных.')

# Пример выполнения программы:
print(f'Результат 1: {calculate_average("1, 2, 3")}') # Строка перебирается, но каждый символ - строковый тип
print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}') # Учитываются только 1 и 3
print(f'Результат 3: {calculate_average(567)}') # Передана не коллекция
print(f'Результат 4: {calculate_average([42, 15, 36, 13])}') # Всё должно работать
